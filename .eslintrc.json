{
	"env": {
		"browser": true,
		"es2021": true
	},
	"extends": [
		"eslint:recommended",
		"plugin:@typescript-eslint/recommended",
		"plugin:jsdoc/recommended-typescript-flavor"
	],
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"ecmaVersion": "latest"
	},
	"plugins": [
		"@typescript-eslint",
		"@stylistic/js",
		"cypress",
		"jsdoc"
	],
	"ignorePatterns": [
		"**/node_modules",
		"**/.vscode",
		"**/scripts"
	],
	"rules": {
		"indent": [
			"error",
			"tab"
		],
		"linebreak-style": [
			"error",
			"unix"
		],
		"quotes": [
			"error",
			"single"
		],
		"semi": [
			"error",
			"always"
		],
		"camelcase": [
			"error"
		],
		"curly": [
			"error",
			"all"
		],
		"max-len": [
			"error",
			{
				"code": 150
			}
		],
		"no-mixed-spaces-and-tabs": [
			"error"
		],
		"no-trailing-spaces": [
			"error"
		],
		"no-multiple-empty-lines": [
			"error",
			{
				"max": 1,
				"maxBOF": 0,
				"maxEOF": 1
			}
		],
		"object-curly-newline": [
			"error",
			{
				"multiline": true
			}
		],
		"@typescript-eslint/typedef": [
			"error",
			{
				"variableDeclaration": true,
				"variableDeclarationIgnoreFunction": false,
				"arrowParameter": true,
				"parameter": true,
				"propertyDeclaration": true
			}
		],
		"operator-linebreak": [
			"error",
			"after"
		],
		"dot-location": [
			"error",
			"property"
		],
		"comma-spacing": [
			"error",
			{
				"before": false,
				"after": true
			}
		],
		"func-call-spacing": [
			"error",
			"never"
		],
		"key-spacing": [
			"error",
			{
				"align": "value",
				"afterColon": true
			}
		],
		"newline-per-chained-call": [
			"error",
			{
				"ignoreChainWithDepth": 1
			}
		],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": [
					"variable",
					"function"
				],
				"format": [
					"camelCase"
				],
				"leadingUnderscore": "forbid",
				"trailingUnderscore": "forbid"
			}
		],
		"sort-imports": [
			"error",
			{
				"ignoreCase": true,
				"ignoreDeclarationSort": false,
				"ignoreMemberSort": false,
				"memberSyntaxSortOrder": [
					"none",
					"all",
					"single",
					"multiple"
				],
				"allowSeparatedGroups": true
			}
		],
		"@stylistic/js/padding-line-between-statements": [
			"error",
			{
				"blankLine": "always",
				"prev": "expression",
				"next": "expression"
			},
			{
				"blankLine": "always",
				"prev": "if",
				"next": "if"
			},
			{
				"blankLine": "always",
				"prev": "expression",
				"next": "if"
			},
			{
				"blankLine": "always",
				"prev": "if",
				"next": "expression"
			},
			{
				"blankLine": "always",
				"prev": "var",
				"next": "if"
			},
			{
				"blankLine": "always",
				"prev": "if",
				"next": "var"
			},
			{
				"blankLine": "always",
				"prev": "const",
				"next": "if"
			},
			{
				"blankLine": "always",
				"prev": "if",
				"next": "const"
			},
			{
				"blankLine": "always",
				"prev": "let",
				"next": "if"
			},
			{
				"blankLine": "always",
				"prev": "if",
				"next": "let"
			},
			{
				"blankLine": "always",
				"prev": "var",
				"next": "expression"
			},
			{
				"blankLine": "always",
				"prev": "let",
				"next": "expression"
			},
			{
				"blankLine": "always",
				"prev": "const",
				"next": "expression"
			},
			{
				"blankLine": "always",
				"prev": "expression",
				"next": "var"
			},
			{
				"blankLine": "always",
				"prev": "expression",
				"next": "let"
			},
			{
				"blankLine": "always",
				"prev": "expression",
				"next": "const"
			}
		],
		"cypress/no-assigning-return-values": "error",
		"cypress/no-unnecessary-waiting": "error",
		"cypress/assertion-before-screenshot": "warn",
		"cypress/no-force": "warn",
		"cypress/no-async-tests": "error",
		"cypress/no-pause": "error"
	}
}